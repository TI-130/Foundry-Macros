/// This macro pulls from the JB2A list of Blue Magic Missiles to throw 3 random paths at targeted tokens

if(game.user.targets.size == 0) return ui.notifications.error('You must target at least one token');
if(canvas.tokens.controlled.length == 0) return ui.notifications.error("Please select your token");

let mmA = "modules/JB2A_DnD5e/Library/1st_Level/Magic_Missile_INSTANTANEOUS/Magic_Missile_Blue_30ft_1200x400_01.webm";
let mmB = "modules/JB2A_DnD5e/Library/1st_Level/Magic_Missile_INSTANTANEOUS/Magic_Missile_Blue_30ft_1200x400_02.webm";
let mmC = "modules/JB2A_DnD5e/Library/1st_Level/Magic_Missile_INSTANTANEOUS/Magic_Missile_Blue_30ft_1200x400_03.webm";
let mmD = "modules/JB2A_DnD5e/Library/1st_Level/Magic_Missile_INSTANTANEOUS/Magic_Missile_Blue_30ft_1200x400_04.webm";
let mmE = "modules/JB2A_DnD5e/Library/1st_Level/Magic_Missile_INSTANTANEOUS/Magic_Missile_Blue_30ft_1200x400_05.webm";
let mmF = "modules/JB2A_DnD5e/Library/1st_Level/Magic_Missile_INSTANTANEOUS/Magic_Missile_Blue_30ft_1200x400_06.webm";
let mmG = "modules/JB2A_DnD5e/Library/1st_Level/Magic_Missile_INSTANTANEOUS/Magic_Missile_Blue_30ft_1200x400_07.webm";
let mmH = "modules/JB2A_DnD5e/Library/1st_Level/Magic_Missile_INSTANTANEOUS/Magic_Missile_Blue_30ft_1200x400_08.webm";
let mmI = "modules/JB2A_DnD5e/Library/1st_Level/Magic_Missile_INSTANTANEOUS/Magic_Missile_Blue_30ft_1200x400_09.webm";

let mmAA = "modules/JB2A_DnD5e/Library/1st_Level/Magic_Missile_INSTANTANEOUS/Magic_Missile_Blue_60ft_2400x400_01.webm";
let mmBB = "modules/JB2A_DnD5e/Library/1st_Level/Magic_Missile_INSTANTANEOUS/Magic_Missile_Blue_60ft_2400x400_02.webm";
let mmCC = "modules/JB2A_DnD5e/Library/1st_Level/Magic_Missile_INSTANTANEOUS/Magic_Missile_Blue_60ft_2400x400_03.webm";
let mmDD = "modules/JB2A_DnD5e/Library/1st_Level/Magic_Missile_INSTANTANEOUS/Magic_Missile_Blue_60ft_2400x400_04.webm";
let mmEE = "modules/JB2A_DnD5e/Library/1st_Level/Magic_Missile_INSTANTANEOUS/Magic_Missile_Blue_60ft_2400x400_05.webm";
let mmFF = "modules/JB2A_DnD5e/Library/1st_Level/Magic_Missile_INSTANTANEOUS/Magic_Missile_Blue_60ft_2400x400_06.webm";
let mmGG = "modules/JB2A_DnD5e/Library/1st_Level/Magic_Missile_INSTANTANEOUS/Magic_Missile_Blue_60ft_2400x400_07.webm";
let mmHH = "modules/JB2A_DnD5e/Library/1st_Level/Magic_Missile_INSTANTANEOUS/Magic_Missile_Blue_60ft_2400x400_08.webm";
let mmII = "modules/JB2A_DnD5e/Library/1st_Level/Magic_Missile_INSTANTANEOUS/Magic_Missile_Blue_60ft_2400x400_09.webm";

function random_itemA(itemsA)
{
return itemsA[Math.floor(Math.random()*itemsA.length)];
}

var itemsA = [mmA, mmB, mmC, mmD, mmE, mmF, mmG, mmH, mmI];

function random_itemB(itemsB)
{
return itemsB[Math.floor(Math.random()*itemsB.length)];
}

var itemsB = [mmAA, mmBB, mmCC, mmDD, mmEE, mmFF, mmGG, mmHH, mmII];

var myStringArray = Array.from(game.user.targets)[0];
var arrayLength = game.user.targets.size;
for (var i = 0; i < arrayLength; i++) {
console.log(myStringArray[i]);

let mainTarget = Array.from(game.user.targets)[i];
let myToken = canvas.tokens.controlled [0];
let halfGrid = canvas.scene.data.grid/2;
let srcX = (myToken.data.x + (myToken.data.width*halfGrid));
let srcY = (myToken.data.y + (myToken.data.height*halfGrid));
let tarX = (mainTarget.data.x + (mainTarget.data.width*halfGrid));
let tarY = (mainTarget.data.y + (mainTarget.data.height*halfGrid));
let outerRad = Math.sqrt(Math.pow(mainTarget.data.width*halfGrid,2) + Math.pow(myToken.data.width*halfGrid,2));

let anDeg = -(Math.atan(((srcY - tarY)/(srcX - tarX)))*57.3);
let anDist = Math.sqrt(Math.pow(srcX-tarX,2)+Math.pow(srcY-tarY,2));
async function wait(ms) {
  return new Promise(resolve => {
    setTimeout(resolve, ms);
  });
}

let anFile = random_itemA(itemsA);
let anFileSize = 600;
switch(true){
 case (anDist<=1200):
    anFileSize = 1200;
    anFile = random_itemA(itemsA);
    break;
 default:
    anFileSize = 2400;
    anFile = random_itemB(itemsB);
    break;
}

let anFile2 = random_itemA(itemsA);
switch(true){
 case (anDist<=1200):    
    anFileSize = 1200;
    anFile2 = random_itemA(itemsA);
    break;
 default:
    anFileSize = 2400;
    anFile2 = random_itemB(itemsB);
    break;
}

let anFile3 = random_itemA(itemsA);
switch(true){
 case (anDist<=1200):
    anFileSize = 1200;
    anFile3 = random_itemA(itemsA);
    break;
 default:
    anFileSize = 2400;
    anFile3 = random_itemB(itemsB);
    break;
}

let anScale = Math.sqrt(Math.pow(srcX-tarX,2)+Math.pow(srcY-tarY,2))/anFileSize;
let anScaleY = anScale;
if (anDist<=1200){anScaleY = 0.8}
if (anDist>=1300){anScaleY = anScale}

if(srcX>tarX){anDeg = anDeg+180}
if(srcX==tarX){if(srcY>tarY){anDeg=90}else{anDeg=-90}}

let spellAnim = 
                    {
                     file: anFile,
                      position: {
                        x: srcX,
                        y: srcY
                      },
                      anchor: {
                       x: 0,
                       y: 0.5
                      },
                      angle: anDeg,
                      scale: {
                       x: anScale,
                       y: anScaleY
                      }
                    }; 
let spellAnim2 = 
                    {
                     file: anFile2,
                      position: {
                        x: srcX,
                        y: srcY
                      },
                      anchor: {
                       x: 0,
                       y: 0.5
                      },
                      angle: anDeg,
                      scale: {
                       x: anScale,
                       y: anScaleY
                      }
                    }; 
let spellAnim3 = 
                    {
                     file: anFile3,
                      position: {
                        x: srcX,
                        y: srcY
                      },
                      anchor: {
                       x: 0,
                       y: 0.5
                      },
                      angle: anDeg,
                      scale: {
                       x: anScale,
                       y: anScaleY
                      }
                    }; 
canvas.fxmaster.playVideo(spellAnim);
await wait (80);
canvas.fxmaster.playVideo(spellAnim2);
await wait (120);
canvas.fxmaster.playVideo(spellAnim3);
await wait (50);
game.socket.emit('module.fxmaster', spellAnim,spellAnim2,spellAnim3);
await wait (50);
}
